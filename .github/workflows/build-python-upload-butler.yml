name: build-python-upload-butler

on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string
      upload_url:
        required: true
        type: string
    secrets:
      BUTLER_API_KEY:
        required: true

jobs:
  build_python:
    name: Build Python
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            CMD_CLEANUP: sed -i 's/${{ inputs.project_name }}.exe/${{ inputs.project_name }}/g' dist/README.txt
            CMD_ZIP: |
              cd dist/
              zip -r9 ../${{ inputs.project_name }}-build-ubuntu-latest.zip *
            CMD_BUTLER_SETUP: |
              TAGVERSION=$(git describe --tags --exact-match)
              echo "TAGVERSION=${TAGVERSION:1}" >> $GITHUB_ENV
              curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
              unzip butler.zip
              chmod +x butler
          - os: macos-latest
            CMD_CLEANUP: sed -i '' 's/${{ inputs.project_name }}.exe/${{ inputs.project_name }}/g' dist/README.txt
            CMD_ZIP: |
              cd dist/
              zip -r9 ../${{ inputs.project_name }}-build-macos-latest.zip *
            CMD_BUTLER_SETUP: |
              TAGVERSION=$(git describe --tags --exact-match)
              echo "TAGVERSION=${TAGVERSION:1}" >> $GITHUB_ENV
              curl -L -o butler.zip https://broth.itch.ovh/butler/darwin-amd64/LATEST/archive/default
              unzip butler.zip
              chmod +x butler
          - os: windows-latest
            CMD_CLEANUP: ;
            CMD_ZIP: Compress-Archive -Path dist/* -DestinationPath ${{ inputs.project_name }}-build-windows-latest.zip
            CMD_BUTLER_SETUP: |
              $tagversion = git describe --tags --exact-match
              $tagversion = $tagversion.Substring(1)
              echo "TAGVERSION=$tagversion" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
              Invoke-WebRequest -o butler.zip https://broth.itch.ovh/butler/windows-amd64/LATEST/archive/default
              Expand-Archive -Path butler.zip -DestinationPath .
      fail-fast: false
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt pyinstaller
      - name: Create Spec File
        run: pyinstaller --clean -ywF -i src/icon.ico -n ${{ inputs.project_name }} src/main.py
      - name: Build Exe
        run: pyinstaller -y ${{ inputs.project_name }}.spec
      - name: Copy Assets
        run: cp -r src/assets dist/assets
      - name: Copy Version
        run: git describe --tags --exact-match > dist/assets/txt/version.txt
      - name: Copy License
        run: cp LICENSE.txt dist/
      - name: Copy Readme
        run: cp README.txt dist/
      - name: Cleanup
        run: ${{ matrix.CMD_CLEANUP }}
      - name: Zip Build
        run: ${{ matrix.CMD_ZIP }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ inputs.upload_url }}
          asset_path: ./${{ inputs.project_name }}-build-${{ matrix.os }}.zip
          asset_name: ${{ inputs.project_name }}-build-${{ matrix.os }}.zip
          asset_content_type: application/zip
      - name: Setup Butler
        run: ${{ matrix.CMD_BUTLER_SETUP }}
      - name: Upload With Butler
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: ./butler push dist jovialknoll/${{ inputs.project_name }}:${{ matrix.os }} --userversion ${{ env.TAGVERSION }}
